- name: Disable old nodejs version
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enable necessary nodejs version
  ansible.builtin.shell: dnf module enable nodejs:20 -y

- name: Install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: installed

- name: Create a user
  ansible.builtin.user:
    name: expense

- name: Import app pre-req
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

- name: Install and update packages based on package.json.
  community.general.npm:
    path: /app
    state: latest

- name: Copy backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Install MySQL client
  ansible.builtin.dnf:
    name: mysql
    state: installed

- name: Install mysql
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.11

#- name: Load Schema
#  community.mysql.mysql_db:
#    state: import
#    name: all
#    target: /app/schema/backend.sql
#    login_user: "{{ rds_username }}"
#    login_password: "{{ mysql_root_password }}"
#    login_host: "{{ rds_endpoint }}"

#- name: Import newrelic nodejs
#  ansible.builtin.import_role:
#    name: newrelic
#    tasks_from: nodejs

- name: Get MySQL version with non-default credentials
  community.mysql.mysql_info:
    login_user: "{{ rds_username }}"
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ rds_endpoint }}"

- name: Start Backend Service
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    enabled: yes
    daemon_reload: yes

